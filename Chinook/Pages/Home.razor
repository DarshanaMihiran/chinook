@page "/"
@attribute [Authorize]


@using Chinook.ClientModels
@using Chinook.Common
@using Chinook.Services.Interfaces

@inherits BaseComponent
@inject IArtistService ArtistsService

<PageTitle>Index</PageTitle>

<h1>Artists</h1>

<div class="form-group">
    <input type="text" class="form-control" placeholder="Search artist..." @bind="searchTerm" @oninput="SearchArtists" />
</div>

@if (Artists == null)
{
    <Loading />
}
else
{
    <table class="table table-striped table-hover table-sm">
        <thead>
            <tr>
                <th>Name</th>
                <th>Number of albums</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var artist in Artists)
            {
                <tr>
                    <td><a href="Artist/@artist.ArtistId">@artist.Name</a></td>
                    <td>@artist.Albums.Count()</td>
                </tr>
            }
        </tbody>
    </table>

    <Error ErrorMessage="@ErrorMessage" />
}

@code {
    private List<ArtistClientModel>? Artists;
    private string? searchTerm;

    protected override async Task OnInitializedAsync() {
        await InvokeAsync(StateHasChanged);
        await LoadArtists();
    }

    private async Task SearchArtists(ChangeEventArgs e)
    {
        searchTerm = e.Value.ToString();
        await LoadArtists();
    }

    private async Task LoadArtists()
    {
        try
        {
            Artists = string.IsNullOrWhiteSpace(searchTerm) ?
                await ArtistsService.GetArtistsAsync() :
                await ArtistsService.GetArtistsBySearchAsync(searchTerm);
            CloseErrorMessage();
        }
        catch (Exception ex)
        {
            HandleError(ex);
        }
    }
}
